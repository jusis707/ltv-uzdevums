# Service definition for StickersNG MySQL - ClusterIP for internal access
apiVersion: v1
kind: Service
metadata:
  # Unique name for the service
  name: stickersng-mysql
  labels:
    # Labels for identifying pods belonging to this service
    app: stickersng-api
    tier: mysql
spec:
  # Expose port 3306 of the MySQL container within the cluster
  ports:
  - port: 3306
    # Optional name for the port (descriptive)
    name: mysql
  # Service type for internal cluster access (no external access)
  type: ClusterIP
  # Selector to select pods with labels (consider using tier for clarity)
  selector:
    app: stickersng-api
    tier: mysql
---
# PersistentVolumeClaim for StickersNG MySQL storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # Unique name for the PVC
  name: stickersng-mysql-pv-claim
  labels:
    # Labels for identifying PVCs (consider using tier for clarity)
    app: stickersng-api
spec:
  # Access mode for the storage (read-write for updates)
  accessModes:
  - ReadWriteOnce
  # Storage request for the PVC (20 GiB)
  resources:
    requests:
      storage: 20Gi
---
# Deployment for StickersNG MySQL with persistent storage
apiVersion: apps/v1
kind: Deployment
metadata:
  # Unique name for the deployment
  name: stickersng-mysql
  labels:
    # Labels for identifying pods belonging to this deployment
    app: stickersng-api
    tier: mysql
spec:
  # Number of replicas for the MySQL database (1 in this case)
  replicas: 1
  # Selector to identify pods for scaling and operations
  selector:
    matchLabels:
      app: stickersng-api
      tier: mysql
  # Recreate strategy for updates (consider using RollingUpdate for smoother transitions)
  strategy:
    type: Recreate
  # Pod template definition
  template:
    metadata:
      # Labels for identifying pods managed by the deployment
      labels:
        app: stickersng-api
        tier: mysql
    spec:
      # Main container for running the MySQL database server
      containers:
      - image: mysql:8.0
        name: mysql
        # Inject environment variables from a secret for database credentials
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: stng-secrets
              key: DB_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: stng-secrets
              key: DB_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: stng-secrets
              key: DB_USERNAME
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: stng-secrets
              key: DB_PASSWORD
        ports:
        - containerPort: 3306
          name: mysql
        # Mount persistent storage volume
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      # Volumes definition
      volumes:
      - name: mysql-persistent-storage
        # Claim reference for persistent storage
        persistentVolumeClaim:
          claimName: stickersng-mysql-pv-claim
